import{jwtVerify as m,decodeProtectedHeader as w,decodeJwt as v}from"jose";var p=new Map,o=!1,A=1e3*60*60,a=class a{constructor(e,s=!1){if(!s&&a._instance){if(!(e.apiKey===a._instance.apiKey&&e.merchantSystemUrn===a._instance.merchantSystemUrn))throw new Error("Cannot create a new instance with different configuration. Use resetInstance to clear the existing instance.");return a._instance}if(s&&a._instance&&a.resetInstance(),!e.apiKey||!e.merchantSystemUrn)throw new Error("Missing required configuration: apiKey and merchantSystemUrn are required");this.apiKey=e.apiKey,this.merchantSystemUrn=e.merchantSystemUrn,this.baseUrl="https://api-connect.sbx.supertab.co",(!this.contentAccess||!a.lastAccessFetchAt||Date.now()-a.lastAccessFetchAt>A)&&(this.contentAccess=this.retrieveContentAccessJson(this.merchantSystemUrn).then(t=>(o&&console.log("Content access retrieved successfully:",t),a.lastAccessFetchAt=Date.now(),t)).catch(t=>{o&&console.error("Error retrieving content access JSON:",t)})),a._instance=this}static resetInstance(){a._instance=null}async getJwksForIssuer(e){if(!p.has(e)){let s=`${this.baseUrl}/.well-known/jwks.json/${encodeURIComponent(e)}`;try{let t=await fetch(s);if(!t.ok)throw new Error(`Failed to fetch JWKS: ${t.status}`);let r=await t.json();p.set(e,r)}catch(t){throw o&&console.error("Error fetching JWKS:",t),t}}return p.get(e)}async verifyToken(e){if(!e)return{valid:!1,reason:"missing_token"};let s;try{s=w(e)}catch(n){return o&&console.error("Invalid JWT header:",n),{valid:!1,reason:"invalid_header"}}if(s.alg!=="RS256")return{valid:!1,reason:"invalid_algorithm"};let t;try{t=v(e)}catch(n){return o&&console.error("Invalid JWT payload:",n),{valid:!1,reason:"invalid_payload"}}let r=t.iss;if(!r||!r.startsWith("urn:stc:customer:"))return{valid:!1,reason:"invalid_issuer"};try{let n=await this.getJwksForIssuer(r);return{valid:!0,payload:(await m(e,async c=>{let l=n.keys.find(u=>u.kid===c.kid);if(!l)throw new Error(`No matching key found: ${c.kid}`);return l},{issuer:r,algorithms:["RS256"],clockTolerance:"1m"})).payload}}catch(n){return o&&console.error("JWT verification failed:",n),n.message?.includes("exp")?{valid:!1,reason:"token_expired"}:{valid:!1,reason:"signature_verification_failed"}}}async recordEvent(e,s,t={}){let r={event_name:e,customer_system_token:s,merchant_system_urn:this.merchantSystemUrn?this.merchantSystemUrn:"",properties:t};try{let n=await fetch(`${this.baseUrl}/events`,{method:"POST",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify(r)});n.ok||o&&console.error(`Failed to record event: ${n.status}`)}catch(n){o&&console.error("Error recording event:",n)}}async retrieveContentAccessJson(e){try{let s=await fetch(`${this.baseUrl}/merchants/systems/${e}/content-access.json`,{method:"GET",headers:{Accept:"application/json"}});if(!s.ok)return o&&console.error(`Failed to fetch content access: ${s.status}`),null;let t=await s.json();return o&&console.log("Raw content access response:",t),t}catch(s){o&&console.error("Error fetching content access:",s)}}async baseHandleRequest(e,s,t,r){let n=await this.verifyToken(e);async function i(d,c,l){let u={page_url:s,user_agent:t,verification_status:n.valid?"valid":"invalid",verification_reason:n.reason||"success"};if(l){let h=d.recordEvent(c,e,u);return l.waitUntil(h),h}else return await d.recordEvent(c,e,u)}if(!n.valid){await i(this,n.reason||"token_verification_failed",r);let d="Payment required: you need to present a valid Supertab Connect token to access this content.",c="\u274C Content access denied"+(n.reason?`: ${n.reason}`:""),u={...await this.contentAccess,message:d,details:c};return new Response(JSON.stringify(u),{status:402,headers:new Headers({"Content-Type":"application/json"})})}return await i(this,"page_viewed",r),new Response("\u2705 Content Access granted",{status:200,headers:new Headers({"Content-Type":"application/json"})})}extractDataFromRequest(e){let s=e.headers.get("Authorization")||"",t=s.startsWith("Bearer ")?s.slice(7):"",r=e.url,n=e.headers.get("User-Agent")||"unknown";return{token:t,url:r,user_agent:n}}static checkIfBotRequest(e){let s=e.headers.get("User-Agent")||"",t=e.headers.get("accept")||"",r=e.headers.get("sec-ch-ua"),n=e.headers.get("accept-language"),i=e.cf?.botManagement?.score,d=["chatgpt-user","perplexitybot","gptbot","anthropic-ai","ccbot","claude-web","claudebot","cohere-ai","youbot","diffbot","oai-searchbot","meta-externalagent","timpibot","amazonbot","bytespider","perplexity-user","googlebot","bot","curl","wget"],c=s.toLowerCase(),l=d.some(f=>c.includes(f)),u=s.toLowerCase().includes("headless")||s.toLowerCase().includes("puppeteer")||!r,h=!t||!n,y=typeof i=="number"&&i<30;return console.log("Bot Detection Details:",{botUaMatch:l,headlessIndicators:u,missingHeaders:h,lowBotScore:y,botScore:i}),l||u||h||y}static async cloudflareHandleRequests(e,s,t){let{MERCHANT_SYSTEM_URN:r,MERCHANT_API_KEY:n}=s;return new a({apiKey:n,merchantSystemUrn:r}).handleRequest(e,a.checkIfBotRequest,t)}static async fastlyHandleRequests(e,s,t){return new a({apiKey:t,merchantSystemUrn:s}).handleRequest(e,a.checkIfBotRequest,null)}async handleRequest(e,s,t){let{token:r,url:n,user_agent:i}=this.extractDataFromRequest(e);return s&&!s(e,t)?new Response("\u2705 Non-Bot Content Access granted",{status:200,headers:new Headers({"Content-Type":"application/json"})}):this.baseHandleRequest(r,n,i,t)}};a._instance=null,a.lastAccessFetchAt=0;var g=a;export{g as SupertabConnect};
//# sourceMappingURL=index.mjs.map