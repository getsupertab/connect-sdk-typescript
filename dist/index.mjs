import{jwtVerify as q,decodeProtectedHeader as V,decodeJwt as W}from"jose";import{importPKCS8 as _,SignJWT as E}from"jose";async function L(o,e){let t=["RS256","ES256"];for(let s of t)try{return{key:await _(o,s),alg:s}}catch(n){e&&console.debug(`Private key did not import using ${s}, retrying...`,n)}throw new Error("Unsupported private key format. Expected RSA or P-256 EC private key.")}async function I({clientId:o,kid:e,privateKeyPem:t,tokenEndpoint:s,resourceUrl:n,licenseXml:r,debug:a}){let{key:l,alg:c}=await L(t,a),p=Math.floor(Date.now()/1e3),i=await new E({}).setProtectedHeader({alg:c,kid:e}).setIssuer(o).setSubject(o).setIssuedAt(p).setExpirationTime(p+300).setAudience(s).sign(l),d=new URLSearchParams({grant_type:"rsl",client_assertion_type:"urn:ietf:params:oauth:client-assertion-type:jwt-bearer",client_assertion:i,license:r,resource:n}),y={method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Accept:"application/json"},body:d.toString()};try{let g=await fetch(s,y);if(!g.ok){let m=await g.text().catch(()=>""),P=`Failed to obtain license token: ${g.status} ${g.statusText}${m?` - ${m}`:""}`;throw new Error(P)}let f;try{f=await g.json()}catch(m){throw a&&console.error("Failed to parse license token response as JSON:",m),new Error("Failed to parse license token response as JSON")}if(!f?.access_token)throw new Error("License token response missing access_token");return f.access_token}catch(g){throw a&&console.error("Error generating license token:",g),g}}async function A({customerURN:o,kid:e,privateKeyPem:t,expirationSeconds:s=3600}){let n="RS256",r=await _(t,n),a=Math.floor(Date.now()/1e3);return new E({}).setProtectedHeader({alg:n,kid:e}).setIssuer(o).setIssuedAt(a).setExpirationTime(a+s).sign(r)}import{decodeProtectedHeader as C,decodeJwt as D,jwtVerify as J}from"jose";var w=new Map,U="sbx-backend";function N(){let o={method:"GET"};return globalThis?.fastly&&(o={...o,backend:U}),o}async function k({cacheKey:o,url:e,debug:t,failureMessage:s,logLabel:n}){if(!w.has(o))try{let r=await fetch(e,N());if(!r.ok)throw new Error(`${s}: ${r.status}`);let a=await r.json();w.set(o,a)}catch(r){throw t&&console.error(n,r),r}return w.get(o)}async function v(o,e,t){let s=`${o}/.well-known/jwks.json/${encodeURIComponent(e)}`;return k({cacheKey:e,url:s,debug:t,failureMessage:"Failed to fetch JWKS",logLabel:"Error fetching JWKS:"})}async function S(o,e){let t=`${o}/.well-known/.well-known/jwks.json`;return k({cacheKey:"platform_jwks",url:t,debug:e,failureMessage:"Failed to fetch platform JWKS",logLabel:"Error fetching platform JWKS:"})}var R=o=>o.replace(/\/+$/,"");async function x({licenseToken:o,requestUrl:e,supertabBaseUrl:t,debug:s}){if(!o)return{valid:!1,reason:"missing_license_token"};let n;try{n=C(o)}catch(i){return s&&console.error("Invalid license JWT header:",i),{valid:!1,reason:"invalid_license_header"}}if(n.alg!=="ES256")return s&&console.error("Unsupported license JWT alg:",n.alg),{valid:!1,reason:"invalid_license_algorithm"};let r;try{r=D(o)}catch(i){return s&&console.error("Invalid license JWT payload:",i),{valid:!1,reason:"invalid_license_payload"}}let a=r.iss;if(!a||!a.startsWith(t))return s&&console.error("Invalid license JWT issuer:",a),{valid:!1,reason:"invalid_license_issuer"};let l=Array.isArray(r.aud)?r.aud.filter(i=>typeof i=="string"):typeof r.aud=="string"?[r.aud]:[],c=R(e);if(!l.some(i=>{let d=R(i);return d?c.startsWith(d):!1}))return s&&console.error("License JWT audience does not match request URL:",r.aud),{valid:!1,reason:"invalid_license_audience"};try{let i=await S(t,s);return{valid:!0,payload:(await J(o,async g=>{let f=i.keys.find(m=>m.kid===g.kid);if(!f)throw new Error(`No matching platform key found: ${g.kid}`);return f},{issuer:a,algorithms:[n.alg],clockTolerance:"1m"})).payload}}catch(i){return s&&console.error("License JWT verification failed:",i),i instanceof Error&&i.message?.includes("exp")?{valid:!1,reason:"license_token_expired"}:{valid:!1,reason:"license_signature_verification_failed"}}}function H({supertabBaseUrl:o,merchantSystemUrn:e}){return`${o}/merchants/systems/${e}/license.xml`}async function T({licenseToken:o,url:e,userAgent:t,ctx:s,supertabBaseUrl:n,merchantSystemUrn:r,debug:a,recordEvent:l}){let c=await x({licenseToken:o,requestUrl:e,supertabBaseUrl:n,debug:a});async function p(i){let d={page_url:e,user_agent:t,verification_status:c.valid?"valid":"invalid",verification_reason:c.reason||"success"},y=l(i,void 0,o,d);return s?.waitUntil&&s.waitUntil(y),y}if(!c.valid){await p(c.reason||"license_token_verification_failed");let i="invalid_request",d="Access to this resource requires a license";switch(c.reason){case"missing_license_token":i="invalid_request",d="Access to this resource requires a license";break;case"license_token_expired":i="invalid_token",d="The license token has expired";break;case"license_signature_verification_failed":case"invalid_license_header":case"invalid_license_payload":i="invalid_token",d="The license token is invalid";break;case"invalid_license_issuer":case"invalid_license_audience":i="insufficient_scope",d="The license token is not valid for this resource";break;default:i="invalid_request",d="Access to this resource requires a license"}let y=H({supertabBaseUrl:n,merchantSystemUrn:r}),g=`${n}/docs/errors#${i}`,f=new Headers({"Content-Type":"text/plain; charset=UTF-8","WWW-Authenticate":`License error="${i}", error_description="${d}", error_uri="${g}"`,Link:`${y}; rel="license"; type="application/rsl+xml"`}),m=`Access to this resource requires a valid license token. Error: ${i} - ${d}`;return new Response(m,{status:401,headers:f})}return await p("license_used"),new Response("\u2705 License Token Access granted",{status:200,headers:new Headers({"Content-Type":"application/json"})})}var h=!0,u=class u{constructor(e,t=!1){if(!t&&u._instance){if(!(e.apiKey===u._instance.apiKey&&e.merchantSystemUrn===u._instance.merchantSystemUrn))throw new Error("Cannot create a new instance with different configuration. Use resetInstance to clear the existing instance.");return u._instance}if(t&&u._instance&&u.resetInstance(),!e.apiKey||!e.merchantSystemUrn)throw new Error("Missing required configuration: apiKey and merchantSystemUrn are required");this.apiKey=e.apiKey,this.merchantSystemUrn=e.merchantSystemUrn,u._instance=this}static resetInstance(){u._instance=null}static setBaseUrl(e){u.baseUrl=e}async verifyToken(e){if(!e)return{valid:!1,reason:"missing_token"};let t;try{t=V(e)}catch(r){return h&&console.error("Invalid JWT header:",r),{valid:!1,reason:"invalid_header"}}if(t.alg!=="RS256")return{valid:!1,reason:"invalid_algorithm"};let s;try{s=W(e)}catch(r){return h&&console.error("Invalid JWT payload:",r),{valid:!1,reason:"invalid_payload"}}let n=s.iss;if(!n||!n.startsWith("urn:stc:customer:"))return{valid:!1,reason:"invalid_issuer"};try{let r=await v(u.baseUrl,n,h);return{valid:!0,payload:(await q(e,async c=>{let p=r.keys.find(i=>i.kid===c.kid);if(!p)throw new Error(`No matching key found: ${c.kid}`);return p},{issuer:n,algorithms:["RS256"],clockTolerance:"1m"})).payload}}catch(r){return h&&console.error("JWT verification failed:",r),r.message?.includes("exp")?{valid:!1,reason:"token_expired"}:{valid:!1,reason:"signature_verification_failed"}}}async recordEvent(e,t,s,n={}){let r={event_name:e,customer_system_token:t,license_token:s,merchant_system_urn:this.merchantSystemUrn?this.merchantSystemUrn:"",properties:n};try{let a={method:"POST",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify(r)};globalThis?.fastly&&(a={...a,backend:"sbx-backend"});let l=await fetch(`${u.baseUrl}/events`,a);l.ok||console.log(`Failed to record event: ${l.status}`)}catch(a){console.log("Error recording event:",a)}}async baseHandleRequest(e,t,s,n){let r=await this.verifyToken(e);async function a(l,c,p){let i={page_url:t,user_agent:s,verification_status:r.valid?"valid":"invalid",verification_reason:r.reason||"success"};if(p){let d=l.recordEvent(c,e,void 0,i);return p.waitUntil(d),d}else return await l.recordEvent(c,e,void 0,i)}if(!r.valid){await a(this,r.reason||"token_verification_failed",n);let l="Payment required: you need to present a valid Supertab Connect token to access this content. Check out the provided url for details",c="\u274C Content access denied"+(r.reason?`: ${r.reason}`:""),i={url:`${u.baseUrl}/merchants/systems/${this.merchantSystemUrn}/content-access.json`,message:l,details:c};return new Response(JSON.stringify(i),{status:402,headers:new Headers({"Content-Type":"application/json"})})}return await a(this,"page_viewed",n),new Response("\u2705 Content Access granted",{status:200,headers:new Headers({"Content-Type":"application/json"})})}async baseLicenseHandleRequest(e,t,s,n){return T({licenseToken:e,url:t,userAgent:s,ctx:n,supertabBaseUrl:u.baseUrl,merchantSystemUrn:this.merchantSystemUrn,debug:h,recordEvent:(r,a,l,c)=>this.recordEvent(r,a,l,c)})}extractDataFromRequest(e){let t=e.headers.get("Authorization")||"",s=t.startsWith("Bearer ")?t.slice(7):"",n=t.startsWith("License ")?t.slice(8):"",r=e.url,a=e.headers.get("User-Agent")||"unknown";return{token:s,licenseToken:n,url:r,user_agent:a}}static checkIfBotRequest(e){let t=e.headers.get("User-Agent")||"",s=e.headers.get("accept")||"",n=e.headers.get("sec-ch-ua"),r=e.headers.get("accept-language"),a=e.cf?.botManagement?.score,l=["chatgpt-user","perplexitybot","gptbot","anthropic-ai","ccbot","claude-web","claudebot","cohere-ai","youbot","diffbot","oai-searchbot","meta-externalagent","timpibot","amazonbot","bytespider","perplexity-user","googlebot","bot","curl","wget"],c=t.toLowerCase(),p=l.some(f=>c.includes(f)),i=t.toLowerCase().includes("headless")||t.toLowerCase().includes("puppeteer")||!n,d=!t.toLowerCase().includes("headless")||!t.toLowerCase().includes("puppeteer")||!n,y=!s||!r,g=typeof a=="number"&&a<30;return console.log("Bot Detection Details:",{botUaMatch:p,headlessIndicators:i,missingHeaders:y,lowBotScore:g,botScore:a}),(c.includes("safari")||c.includes("mozilla"))&&i&&d?!1:p||i||y||g}static async cloudflareHandleRequests(e,t,s){let{MERCHANT_SYSTEM_URN:n,MERCHANT_API_KEY:r}=t;return new u({apiKey:r,merchantSystemUrn:n}).handleRequest(e,u.checkIfBotRequest,s)}static async fastlyHandleRequests(e,t,s){return new u({apiKey:s,merchantSystemUrn:t}).handleRequest(e,u.checkIfBotRequest,null)}async handleRequest(e,t,s){let{token:n,licenseToken:r,url:a,user_agent:l}=this.extractDataFromRequest(e);return t&&!t(e,s)?new Response("\u2705 Non-Bot Content Access granted",{status:200,headers:new Headers({"Content-Type":"application/json"})}):n?this.baseHandleRequest(n,a,l,s):this.baseLicenseHandleRequest(r,a,l,s)}static async generateLicenseToken(e,t,s,n,r,a){return I({clientId:e,kid:t,privateKeyPem:s,tokenEndpoint:n,resourceUrl:r,licenseXml:a,debug:h})}static async generateCustomerJWT(e,t,s,n=3600){return A({customerURN:e,kid:t,privateKeyPem:s,expirationSeconds:n})}};u.baseUrl="https://api-connect.sbx.supertab.co",u._instance=null;var b=u;export{b as SupertabConnect};
//# sourceMappingURL=index.mjs.map