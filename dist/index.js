"use strict";var o=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.prototype.hasOwnProperty;var m=(i,e)=>{for(var s in e)o(i,s,{get:e[s],enumerable:!0})},p=(i,e,s,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of g(e))!u.call(i,t)&&t!==s&&o(i,t,{get:()=>e[t],enumerable:!(r=h(e,t))||r.enumerable});return i};var I=i=>p(o({},"__esModule",{value:!0}),i);var _={};m(_,{SupertabConnect:()=>d});module.exports=I(_);var n=require("jose"),c=new Map,d=class{constructor(e){this.apiKey=e.apiKey,this.merchantSystemId=e.merchantSystemId,this.baseUrl=e.baseUrl||"https://api-connect.sbx.supertab.co",this.debug=e.debug||!1}async getJwksForIssuer(e){if(!c.has(e)){let s=`${this.baseUrl}/.well-known/jwks.json/${encodeURIComponent(e)}`;try{let r=await fetch(s);if(!r.ok)throw new Error(`Failed to fetch JWKS: ${r.status}`);let t=await r.json();c.set(e,t)}catch(r){throw this.debug&&console.error("Error fetching JWKS:",r),r}}return c.get(e)}async verifyToken(e){if(!e)return{valid:!1,reason:"missing_token"};let s;try{s=(0,n.decodeProtectedHeader)(e)}catch(a){return this.debug&&console.error("Invalid JWT header:",a),{valid:!1,reason:"invalid_header"}}if(s.alg!=="RS256")return{valid:!1,reason:"invalid_algorithm"};let r;try{r=(0,n.decodeJwt)(e)}catch(a){return this.debug&&console.error("Invalid JWT payload:",a),{valid:!1,reason:"invalid_payload"}}let t=r.iss;if(!t||!t.startsWith("urn:stc:customer:"))return{valid:!1,reason:"invalid_issuer"};try{let a=await this.getJwksForIssuer(t);return{valid:!0,payload:(await(0,n.jwtVerify)(e,async l=>{let y=a.keys.find(f=>f.kid===l.kid);if(!y)throw new Error(`No matching key found: ${l.kid}`);return y},{issuer:t,algorithms:["RS256"],clockTolerance:"1m"})).payload}}catch(a){return this.debug&&console.error("JWT verification failed:",a),a.message?.includes("exp")?{valid:!1,reason:"token_expired"}:{valid:!1,reason:"signature_verification_failed"}}}async recordEvent(e,s,r={}){let t={event_name:e,customer_system_token:s,merchant_system_identifier:this.merchantSystemId,properties:r};try{let a=await fetch(`${this.baseUrl}/events`,{method:"POST",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify(t)});a.ok||this.debug&&console.error(`Failed to record event: ${a.status}`)}catch(a){this.debug&&console.error("Error recording event:",a)}}};0&&(module.exports={SupertabConnect});
//# sourceMappingURL=index.js.map
